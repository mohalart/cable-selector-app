name: Auto-Fix and Build EXE

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build-windows-exe:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install ttkbootstrap==1.10.1
        pip install pyinstaller==6.3.0
        
    - name: Auto-fix locale issues in Python file
      run: |
        python -c "
        # Read the original file
        with open('2517126_project_final.py', 'r', encoding='utf-8') as f:
            content = f.read()
        
        # Split into lines
        lines = content.split('\n')
        
        # Filter out problematic lines
        fixed_lines = []
        skip_block = False
        
        for line in lines:
            # Skip locale import
            if 'import locale' in line:
                continue
            # Start skipping locale block
            elif '# try to set locale properly' in line:
                skip_block = True
                continue
            # End skipping when we hit the next non-locale code
            elif skip_block and line.strip() and not any(x in line for x in ['locale', '_candidate', 'try:', 'except', 'continue', 'for', 'break']):
                skip_block = False
                fixed_lines.append(line)
            # Add line if not in skip block
            elif not skip_block:
                fixed_lines.append(line)
        
        # Write fixed file
        with open('app_fixed.py', 'w', encoding='utf-8') as f:
            f.write('\n'.join(fixed_lines))
        
        print('Fixed file created successfully!')
        "
        
    - name: Verify fixed file
      run: |
        Write-Host "Checking if fixed file was created..."
        if (Test-Path "app_fixed.py") {
          Write-Host "‚úÖ Fixed file exists"
          Write-Host "First 20 lines of fixed file:"
          Get-Content "app_fixed.py" | Select-Object -First 20
        } else {
          Write-Host "‚ùå Fixed file not created"
          exit 1
        }
        
    - name: Test Python syntax
      run: |
        Write-Host "Testing Python syntax..."
        python -m py_compile app_fixed.py
        Write-Host "‚úÖ Syntax check passed!"
        
    - name: Build EXE with PyInstaller
      run: |
        pyinstaller --onefile --windowed --name=SmartCableSelector --collect-all=ttkbootstrap --hidden-import=ttkbootstrap --hidden-import=ttkbootstrap.themes --clean --noconfirm app_fixed.py
        
    - name: Verify EXE creation
      run: |
        if (Test-Path "dist\SmartCableSelector.exe") {
          Write-Host "üéâ SUCCESS! EXE created!"
          $size = (Get-Item "dist\SmartCableSelector.exe").Length
          Write-Host "üì¶ Size: $size bytes"
          Write-Host "‚úÖ Ready for download!"
        } else {
          Write-Host "‚ùå EXE creation failed!"
          Write-Host "Contents of dist folder:"
          if (Test-Path "dist") {
            Get-ChildItem "dist"
          }
          exit 1
        }
        
    - name: Upload working EXE
      uses: actions/upload-artifact@v4
      with:
        name: SmartCableSelector-AutoFixed
        path: dist/SmartCableSelector.exe
        retention-days: 30
