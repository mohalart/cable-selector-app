name: Create Folder Distribution with TTK Files

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build-folder-distribution:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install ttkbootstrap==1.10.1
        pip install pyinstaller==6.3.0
        
    - name: Fix locale issues in Python file
      run: |
        python -c "
        # Read the original file
        with open('2517126_project_final.py', 'r', encoding='utf-8') as f:
            content = f.read()
        
        # Split into lines and fix locale issues
        lines = content.split('\n')
        fixed_lines = []
        skip_block = False
        
        for line in lines:
            if 'import locale' in line:
                continue
            elif '# try to set locale properly' in line:
                skip_block = True
                continue
            elif skip_block and line.strip() and not any(x in line for x in ['locale', '_candidate', 'try:', 'except', 'continue', 'for', 'break']):
                skip_block = False
                fixed_lines.append(line)
            elif not skip_block:
                fixed_lines.append(line)
        
        # Write fixed file
        with open('SmartCableSelector.py', 'w', encoding='utf-8') as f:
            f.write('\n'.join(fixed_lines))
        
        print('Fixed Python file created as SmartCableSelector.py')
        "
        
    - name: Create folder-based EXE (not single file)
      run: |
        pyinstaller --onedir --windowed --name=SmartCableSelector --collect-all=ttkbootstrap --hidden-import=ttkbootstrap --hidden-import=ttkbootstrap.themes --clean --noconfirm SmartCableSelector.py
        
    - name: Verify build structure
      run: |
        Write-Host "üìÅ Checking build structure..."
        if (Test-Path "dist\SmartCableSelector") {
          Write-Host "‚úÖ Folder distribution created!"
          Write-Host "üìÇ Contents of SmartCableSelector folder:"
          Get-ChildItem "dist\SmartCableSelector" | Format-Table Name, Length
          
          if (Test-Path "dist\SmartCableSelector\SmartCableSelector.exe") {
            Write-Host "‚úÖ Main executable found!"
            $size = (Get-Item "dist\SmartCableSelector\SmartCableSelector.exe").Length / 1MB
            Write-Host "üì¶ EXE Size: $([math]::Round($size, 1)) MB"
          }
          
          Write-Host "üîç Looking for ttkbootstrap files..."
          $ttkFiles = Get-ChildItem "dist\SmartCableSelector" -Recurse -Filter "*ttk*" | Measure-Object
          Write-Host "üìÑ Found $($ttkFiles.Count) ttkbootstrap-related files"
          
        } else {
          Write-Host "‚ùå Folder distribution failed!"
          exit 1
        }
        
    - name: Create distribution package
      run: |
        Write-Host "üì¶ Creating distribution package..."
        
        # Create a clean distribution folder
        New-Item -ItemType Directory -Path "SmartCableSelector_Distribution" -Force
        
        # Copy the entire application folder
        Copy-Item -Path "dist\SmartCableSelector\*" -Destination "SmartCableSelector_Distribution" -Recurse
        
        # Create a simple run script
        @"
@echo off
echo Starting Smart Cable Selector...
echo.
SmartCableSelector.exe
if errorlevel 1 (
    echo.
    echo Error: Application failed to start
    echo Please make sure all files are in the same folder
    pause
)
"@ | Out-File -FilePath "SmartCableSelector_Distribution\RUN_CABLE_SELECTOR.bat" -Encoding ASCII
        
        # Create README
        @"
SMART CABLE SELECTOR - PORTABLE DISTRIBUTION
==========================================

CONTENTS:
- SmartCableSelector.exe - Main application
- RUN_CABLE_SELECTOR.bat - Easy startup script
- _internal/ - Required libraries and dependencies
- ttkbootstrap themes and files

HOW TO RUN:
1. Double-click 'RUN_CABLE_SELECTOR.bat' 
   OR
2. Double-click 'SmartCableSelector.exe' directly

REQUIREMENTS:
- Windows 7 or newer
- No Python installation required
- Keep all files in the same folder

DISTRIBUTION:
- You can copy this entire folder to any Windows computer
- All dependencies are included
- No internet connection required

Created by: Ata Turk - 2025
"@ | Out-File -FilePath "SmartCableSelector_Distribution\README.txt" -Encoding UTF8
        
        Write-Host "‚úÖ Distribution package created!"
        
    - name: Verify final package
      run: |
        Write-Host "üîç Final package verification..."
        $folderSize = (Get-ChildItem "SmartCableSelector_Distribution" -Recurse | Measure-Object -Property Length -Sum).Sum / 1MB
        Write-Host "üì¶ Total package size: $([math]::Round($folderSize, 1)) MB"
        
        Write-Host "üìÇ Package contents:"
        Get-ChildItem "SmartCableSelector_Distribution" | Format-Table Name, Length
        
        if (Test-Path "SmartCableSelector_Distribution\SmartCableSelector.exe") {
          Write-Host "‚úÖ Main executable: OK"
        }
        if (Test-Path "SmartCableSelector_Distribution\RUN_CABLE_SELECTOR.bat") {
          Write-Host "‚úÖ Run script: OK"
        }
        if (Test-Path "SmartCableSelector_Distribution\README.txt") {
          Write-Host "‚úÖ README: OK"
        }
        if (Test-Path "SmartCableSelector_Distribution\_internal") {
          Write-Host "‚úÖ Dependencies folder: OK"
        }
        
    - name: Create ZIP package
      run: |
        Write-Host "üì¶ Creating ZIP package for download..."
        Compress-Archive -Path "SmartCableSelector_Distribution\*" -DestinationPath "SmartCableSelector_Portable.zip" -Force
        
        $zipSize = (Get-Item "SmartCableSelector_Portable.zip").Length / 1MB
        Write-Host "‚úÖ ZIP created: $([math]::Round($zipSize, 1)) MB"
        
    - name: Upload portable distribution
      uses: actions/upload-artifact@v4
      with:
        name: SmartCableSelector-Portable-Distribution
        path: SmartCableSelector_Portable.zip
        retention-days: 30
