name: Build Windows EXE with All Dependencies

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build-windows-exe:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install all dependencies
      run: |
        python -m pip install --upgrade pip
        pip install ttkbootstrap==1.10.1
        pip install pyinstaller==6.3.0
        pip install pillow
        pip install setuptools
        
    - name: Create comprehensive build script
      run: |
        echo "import os" > build_script.py
        echo "import sys" >> build_script.py
        echo "import PyInstaller.__main__" >> build_script.py
        echo "" >> build_script.py
        echo "# Get ttkbootstrap location" >> build_script.py
        echo "import ttkbootstrap" >> build_script.py
        echo "ttk_path = os.path.dirname(ttkbootstrap.__file__)" >> build_script.py
        echo "print(f'ttkbootstrap path: {ttk_path}')" >> build_script.py
        echo "" >> build_script.py
        echo "PyInstaller.__main__.run([" >> build_script.py
        echo "    '2517126_project_final.py'," >> build_script.py
        echo "    '--onefile'," >> build_script.py
        echo "    '--windowed'," >> build_script.py
        echo "    '--name=SmartCableSelector'," >> build_script.py
        echo "    '--hidden-import=ttkbootstrap'," >> build_script.py
        echo "    '--hidden-import=ttkbootstrap.themes'," >> build_script.py
        echo "    '--hidden-import=ttkbootstrap.themes.standard'," >> build_script.py
        echo "    '--hidden-import=ttkbootstrap.themes.user'," >> build_script.py
        echo "    '--hidden-import=ttkbootstrap.style'," >> build_script.py
        echo "    '--hidden-import=ttkbootstrap.widgets'," >> build_script.py
        echo "    '--hidden-import=ttkbootstrap.constants'," >> build_script.py
        echo "    '--hidden-import=ttkbootstrap.localization'," >> build_script.py
        echo "    '--hidden-import=PIL'," >> build_script.py
        echo "    '--hidden-import=PIL.Image'," >> build_script.py
        echo "    '--hidden-import=PIL.ImageTk'," >> build_script.py
        echo "    f'--add-data={ttk_path};ttkbootstrap'," >> build_script.py
        echo "    '--collect-all=ttkbootstrap'," >> build_script.py
        echo "    '--copy-metadata=ttkbootstrap'," >> build_script.py
        echo "    '--clean'," >> build_script.py
        echo "    '--noconfirm'" >> build_script.py
        echo "])" >> build_script.py
        
    - name: Show build script
      run: type build_script.py
        
    - name: Build EXE with comprehensive dependencies
      run: python build_script.py
      
    - name: List dist contents
      run: dir dist
      
    - name: Test if EXE was created
      run: |
        if (Test-Path "dist/SmartCableSelector.exe") {
          Write-Host "‚úÖ EXE created successfully!"
          $size = (Get-Item "dist/SmartCableSelector.exe").Length / 1MB
          Write-Host "üì¶ Size: $([math]::Round($size, 1)) MB"
          
          # Try to get file info
          $file = Get-Item "dist/SmartCableSelector.exe"
          Write-Host "üìÖ Created: $($file.CreationTime)"
          Write-Host "üìè Exact size: $($file.Length) bytes"
        } else {
          Write-Host "‚ùå EXE creation failed!"
          Write-Host "Contents of dist folder:"
          Get-ChildItem dist -ErrorAction SilentlyContinue
          exit 1
        }
        
    - name: Upload EXE as artifact
      uses: actions/upload-artifact@v4
      with:
        name: SmartCableSelector-Windows-Complete
        path: dist/SmartCableSelector.exe
        
    - name: Upload build logs (if build fails)
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: build-logs
        path: |
          build/
          *.log
